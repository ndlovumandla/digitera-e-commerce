# Generated by Django 5.2.5 on 2025-08-24 15:44

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MarketingPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='package name')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='package price')),
                ('period', models.CharField(choices=[('once_off', 'Once-off'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], default='monthly', max_length=20, verbose_name='billing period')),
                ('description', models.TextField(verbose_name='package description')),
                ('features', models.JSONField(default=dict, help_text='JSON object containing package features and limits', verbose_name='package features')),
                ('max_products', models.PositiveIntegerField(default=0, help_text='Maximum number of products allowed (0 = unlimited)', verbose_name='maximum products')),
                ('max_monthly_sales', models.PositiveIntegerField(default=0, help_text='Maximum monthly sales volume (0 = unlimited)', verbose_name='maximum monthly sales')),
                ('max_storage_gb', models.PositiveIntegerField(default=0, help_text='Maximum storage allowance in GB (0 = unlimited)', verbose_name='maximum storage (GB)')),
                ('custom_domain_allowed', models.BooleanField(default=False, verbose_name='custom domain allowed')),
                ('advanced_analytics', models.BooleanField(default=False, verbose_name='advanced analytics')),
                ('priority_support', models.BooleanField(default=False, verbose_name='priority support')),
                ('marketplace_promotion', models.BooleanField(default=False, verbose_name='marketplace promotion')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_featured', models.BooleanField(default=False, verbose_name='is featured')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Marketing Package',
                'verbose_name_plural': 'Marketing Packages',
                'db_table': 'marketing_packages',
                'indexes': [models.Index(fields=['is_active', 'is_featured'], name='marketing_p_is_acti_4c6a31_idx'), models.Index(fields=['price'], name='marketing_p_price_d9ad00_idx')],
            },
        ),
        migrations.CreateModel(
            name='EmailCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('welcome', 'Welcome Series'), ('newsletter', 'Newsletter'), ('product_launch', 'Product Launch'), ('promotional', 'Promotional'), ('follow_up', 'Follow-up'), ('cart_abandonment', 'Cart Abandonment'), ('feedback', 'Feedback Request'), ('announcement', 'Announcement')], max_length=30, verbose_name='campaign type')),
                ('subject', models.CharField(max_length=255, verbose_name='email subject')),
                ('template', models.TextField(verbose_name='email template')),
                ('target_audience', models.JSONField(default=dict, help_text='JSON object defining the target audience criteria', verbose_name='target audience')),
                ('recipients_count', models.PositiveIntegerField(default=0, verbose_name='recipients count')),
                ('opened_count', models.PositiveIntegerField(default=0, verbose_name='opened count')),
                ('clicked_count', models.PositiveIntegerField(default=0, verbose_name='clicked count')),
                ('unsubscribed_count', models.PositiveIntegerField(default=0, verbose_name='unsubscribed count')),
                ('is_scheduled', models.BooleanField(default=False, verbose_name='is scheduled')),
                ('scheduled_at', models.DateTimeField(blank=True, null=True, verbose_name='scheduled at')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='sent at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_campaigns', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Campaign',
                'verbose_name_plural': 'Email Campaigns',
                'db_table': 'email_campaigns',
                'indexes': [models.Index(fields=['user', 'type'], name='email_campa_user_id_aa476c_idx'), models.Index(fields=['sent_at'], name='email_campa_sent_at_a9a85b_idx'), models.Index(fields=['scheduled_at'], name='email_campa_schedul_e7e336_idx')],
            },
        ),
        migrations.CreateModel(
            name='CreatorPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_date', models.DateTimeField(auto_now_add=True, verbose_name='purchase date')),
                ('expiry_date', models.DateTimeField(blank=True, help_text='When the package expires (null for lifetime packages)', null=True, verbose_name='expiry date')),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('cancelled', 'Cancelled'), ('suspended', 'Suspended')], default='active', max_length=20, verbose_name='package status')),
                ('products_used', models.PositiveIntegerField(default=0, verbose_name='products used')),
                ('storage_used_gb', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='storage used (GB)')),
                ('monthly_sales_count', models.PositiveIntegerField(default=0, verbose_name='monthly sales count')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creator_packages', to=settings.AUTH_USER_MODEL)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='creator_packages', to='marketing.marketingpackage')),
            ],
            options={
                'verbose_name': 'Creator Package',
                'verbose_name_plural': 'Creator Packages',
                'db_table': 'creator_packages',
                'indexes': [models.Index(fields=['user', 'status'], name='creator_pac_user_id_d6d2e6_idx'), models.Index(fields=['package'], name='creator_pac_package_92996f_idx'), models.Index(fields=['expiry_date'], name='creator_pac_expiry__5b9416_idx')],
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='promotion name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('type', models.CharField(choices=[('discount_percentage', 'Percentage Discount'), ('discount_fixed', 'Fixed Amount Discount'), ('free_shipping', 'Free Shipping'), ('buy_one_get_one', 'Buy One Get One'), ('limited_time', 'Limited Time Offer')], max_length=30, verbose_name='promotion type')),
                ('discount_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='discount percentage')),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='discount amount')),
                ('minimum_order_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='minimum order amount')),
                ('maximum_uses', models.PositiveIntegerField(blank=True, help_text='Maximum number of times this promotion can be used', null=True, verbose_name='maximum uses')),
                ('current_uses', models.PositiveIntegerField(default=0, verbose_name='current uses')),
                ('valid_from', models.DateTimeField(verbose_name='valid from')),
                ('valid_until', models.DateTimeField(verbose_name='valid until')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('applicable_products', models.ManyToManyField(blank=True, help_text='Products this promotion applies to (empty = all products)', related_name='promotions', to='products.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Promotion',
                'verbose_name_plural': 'Promotions',
                'db_table': 'promotions',
                'indexes': [models.Index(fields=['user', 'is_active'], name='promotions_user_id_e460fb_idx'), models.Index(fields=['valid_from', 'valid_until'], name='promotions_valid_f_7ffd1e_idx'), models.Index(fields=['type'], name='promotions_type_eb39fe_idx')],
            },
        ),
    ]
