# Generated by Django 5.2.5 on 2025-08-24 15:44

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StorefrontTheme',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=100, verbose_name='theme name')),
                ('description', models.TextField(blank=True, default='', verbose_name='description')),
                ('preview_image', models.CharField(blank=True, default='', max_length=200, verbose_name='preview image')),
                ('layout_config', models.JSONField(default=dict, verbose_name='layout configuration')),
                ('color_scheme', models.JSONField(default=dict, verbose_name='color scheme')),
                ('typography', models.JSONField(default=dict, verbose_name='typography')),
                ('is_premium', models.BooleanField(default=False, verbose_name='is premium')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='sort order')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Storefront Theme',
                'verbose_name_plural': 'Storefront Themes',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Storefront',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=200, verbose_name='storefront name')),
                ('slug', models.SlugField(default='', max_length=200, unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, default='', verbose_name='description')),
                ('tagline', models.CharField(blank=True, default='', max_length=200, verbose_name='tagline')),
                ('logo', models.CharField(blank=True, default='', max_length=200, verbose_name='logo URL')),
                ('banner_image', models.CharField(blank=True, default='', max_length=200, verbose_name='banner image')),
                ('favicon', models.CharField(blank=True, default='', max_length=200, verbose_name='favicon URL')),
                ('layout_config', models.JSONField(default=dict, verbose_name='layout configuration')),
                ('color_scheme', models.JSONField(default=dict, verbose_name='color scheme')),
                ('typography', models.JSONField(default=dict, verbose_name='typography settings')),
                ('navigation_config', models.JSONField(default=dict, verbose_name='navigation configuration')),
                ('footer_config', models.JSONField(default=dict, verbose_name='footer configuration')),
                ('hero_section', models.JSONField(default=dict, verbose_name='hero section')),
                ('about_section', models.JSONField(default=dict, verbose_name='about section')),
                ('features_section', models.JSONField(default=dict, verbose_name='features section')),
                ('testimonials_section', models.JSONField(default=dict, verbose_name='testimonials section')),
                ('custom_sections', models.JSONField(default=list, verbose_name='custom sections')),
                ('custom_domain', models.CharField(blank=True, default='', max_length=255, null=True, unique=True, verbose_name='custom domain')),
                ('subdomain', models.CharField(blank=True, default='', max_length=100, unique=True, verbose_name='subdomain')),
                ('meta_title', models.CharField(blank=True, default='', max_length=60, verbose_name='meta title')),
                ('meta_description', models.TextField(blank=True, default='', max_length=160, verbose_name='meta description')),
                ('google_analytics_id', models.CharField(blank=True, default='', max_length=20, verbose_name='Google Analytics ID')),
                ('facebook_pixel_id', models.CharField(blank=True, default='', max_length=20, verbose_name='Facebook Pixel ID')),
                ('business_email', models.EmailField(blank=True, max_length=254, verbose_name='business email')),
                ('business_phone', models.CharField(blank=True, max_length=20, verbose_name='business phone')),
                ('business_address', models.TextField(blank=True, verbose_name='business address')),
                ('social_links', models.JSONField(default=dict, verbose_name='social media links')),
                ('currency', models.CharField(default='ZAR', max_length=3, verbose_name='default currency')),
                ('timezone', models.CharField(default='Africa/Johannesburg', max_length=50, verbose_name='timezone')),
                ('language', models.CharField(default='en', max_length=10, verbose_name='language')),
                ('enable_blog', models.BooleanField(default=False, verbose_name='enable blog')),
                ('enable_testimonials', models.BooleanField(default=True, verbose_name='enable testimonials')),
                ('enable_newsletter', models.BooleanField(default=False, verbose_name='enable newsletter')),
                ('enable_chat', models.BooleanField(default=False, verbose_name='enable live chat')),
                ('enable_reviews', models.BooleanField(default=True, verbose_name='enable reviews')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='view count')),
                ('unique_visitors', models.PositiveIntegerField(default=0, verbose_name='unique visitors')),
                ('conversion_rate', models.FloatField(default=0.0, verbose_name='conversion rate')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('suspended', 'Suspended'), ('archived', 'Archived')], default='draft', max_length=20, verbose_name='status')),
                ('is_featured', models.BooleanField(default=False, verbose_name='is featured')),
                ('is_verified', models.BooleanField(default=False, verbose_name='is verified')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='published at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storefronts', to=settings.AUTH_USER_MODEL)),
                ('theme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='storefronts.storefronttheme')),
            ],
            options={
                'verbose_name': 'Storefront',
                'verbose_name_plural': 'Storefronts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StorefrontCustomization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('custom_css', models.TextField(blank=True, default='', verbose_name='custom CSS')),
                ('custom_js', models.TextField(blank=True, default='', verbose_name='custom JavaScript')),
                ('custom_fonts', models.JSONField(default=list, verbose_name='custom fonts')),
                ('email_templates', models.JSONField(default=dict, verbose_name='email templates')),
                ('password_protection', models.BooleanField(default=False, verbose_name='password protection')),
                ('access_password', models.CharField(blank=True, default='', max_length=100, verbose_name='access password')),
                ('maintenance_mode', models.BooleanField(default=False, verbose_name='maintenance mode')),
                ('maintenance_message', models.TextField(blank=True, default='', verbose_name='maintenance message')),
                ('webhook_urls', models.JSONField(default=dict, verbose_name='webhook URLs')),
                ('api_settings', models.JSONField(default=dict, verbose_name='API settings')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('storefront', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customization', to='storefronts.storefront')),
            ],
            options={
                'verbose_name': 'Storefront Customization',
                'verbose_name_plural': 'Storefront Customizations',
            },
        ),
        migrations.CreateModel(
            name='StorefrontAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(verbose_name='date')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='views')),
                ('unique_views', models.PositiveIntegerField(default=0, verbose_name='unique views')),
                ('product_views', models.PositiveIntegerField(default=0, verbose_name='product views')),
                ('conversions', models.PositiveIntegerField(default=0, verbose_name='conversions')),
                ('revenue', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='revenue')),
                ('organic_traffic', models.PositiveIntegerField(default=0, verbose_name='organic traffic')),
                ('social_traffic', models.PositiveIntegerField(default=0, verbose_name='social traffic')),
                ('direct_traffic', models.PositiveIntegerField(default=0, verbose_name='direct traffic')),
                ('referral_traffic', models.PositiveIntegerField(default=0, verbose_name='referral traffic')),
                ('desktop_views', models.PositiveIntegerField(default=0, verbose_name='desktop views')),
                ('mobile_views', models.PositiveIntegerField(default=0, verbose_name='mobile views')),
                ('tablet_views', models.PositiveIntegerField(default=0, verbose_name='tablet views')),
                ('top_countries', models.JSONField(default=dict, verbose_name='top countries')),
                ('top_cities', models.JSONField(default=dict, verbose_name='top cities')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('storefront', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='storefronts.storefront')),
            ],
            options={
                'verbose_name': 'Storefront Analytics',
                'verbose_name_plural': 'Storefront Analytics',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['storefront', 'date'], name='storefronts_storefr_b72762_idx'), models.Index(fields=['date'], name='storefronts_date_29e011_idx')],
                'unique_together': {('storefront', 'date')},
            },
        ),
        migrations.CreateModel(
            name='StorefrontPage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='', max_length=200, verbose_name='title')),
                ('slug', models.SlugField(default='', max_length=200, verbose_name='slug')),
                ('content', models.TextField(default='', verbose_name='content')),
                ('page_type', models.CharField(choices=[('page', 'Static Page'), ('blog_post', 'Blog Post'), ('landing', 'Landing Page')], default='page', max_length=20, verbose_name='page type')),
                ('meta_title', models.CharField(blank=True, default='', max_length=60, verbose_name='meta title')),
                ('meta_description', models.TextField(blank=True, default='', max_length=160, verbose_name='meta description')),
                ('featured_image', models.CharField(blank=True, max_length=200, verbose_name='featured image')),
                ('is_published', models.BooleanField(default=False, verbose_name='is published')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='published at')),
                ('page_builder_data', models.JSONField(default=dict, verbose_name='page builder data')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('storefront', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='storefronts.storefront')),
            ],
            options={
                'verbose_name': 'Storefront Page',
                'verbose_name_plural': 'Storefront Pages',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['storefront', 'page_type'], name='storefronts_storefr_d72360_idx'), models.Index(fields=['slug'], name='storefronts_slug_25ab7f_idx'), models.Index(fields=['is_published'], name='storefronts_is_publ_7f7dbf_idx')],
                'unique_together': {('storefront', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='StorefrontReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=5, verbose_name='rating')),
                ('title', models.CharField(blank=True, default='', max_length=200, verbose_name='review title')),
                ('content', models.TextField(blank=True, default='', verbose_name='review content')),
                ('is_verified', models.BooleanField(default=False, verbose_name='is verified')),
                ('is_featured', models.BooleanField(default=False, verbose_name='is featured')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('storefront', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storefront_reviews', to='storefronts.storefront')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storefront_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Storefront Review',
                'verbose_name_plural': 'Storefront Reviews',
                'ordering': ['-created_at'],
                'unique_together': {('storefront', 'user')},
            },
        ),
        migrations.AddIndex(
            model_name='storefront',
            index=models.Index(fields=['user', 'status'], name='storefronts_user_id_ad8188_idx'),
        ),
        migrations.AddIndex(
            model_name='storefront',
            index=models.Index(fields=['slug'], name='storefronts_slug_943873_idx'),
        ),
        migrations.AddIndex(
            model_name='storefront',
            index=models.Index(fields=['custom_domain'], name='storefronts_custom__e877bf_idx'),
        ),
        migrations.AddIndex(
            model_name='storefront',
            index=models.Index(fields=['subdomain'], name='storefronts_subdoma_dbd1ed_idx'),
        ),
        migrations.AddIndex(
            model_name='storefront',
            index=models.Index(fields=['status', 'is_featured'], name='storefronts_status_19e7bb_idx'),
        ),
        migrations.AddIndex(
            model_name='storefront',
            index=models.Index(fields=['created_at'], name='storefronts_created_509092_idx'),
        ),
    ]
